<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.1.xsd">
	
	<bean name="bitcoin" class="com.tr.biton.app.BitCoin" scope = "singleton">
		<constructor-arg type = "java.lang.String" value = "biton"/>
		<constructor-arg type = "boolean" value = "true"/>
	</bean>
	
	<bean name="escrowcoinservice" class="com.tr.biton.service.EscrowCoinServiceImpl" scope="singleton">
		<constructor-arg ref="bitcoin" />
	</bean>
	
	<bean name="mainmodel" class="com.tr.biton.model.MainModel" scope="singleton">
		<constructor-arg ref="escrowcoinservice" />
	</bean>
	 
	<context:component-scan base-package="com.tr.biton.controller" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5433/biton" />
		<property name="username" value="postgres" />
		<property name="password" value="4260" />
	</bean>
	
	<bean id="hibernate4AnnotatedSessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.tr.biton.orm.Wallet</value>
				<value>com.tr.biton.orm.Transaction</value>
				<value>com.tr.biton.orm.TxOutput</value>
				<value>com.tr.biton.orm.DirectPayment</value>
				<value>com.tr.biton.orm.EscrowPayment</value>
				<value>com.tr.biton.orm.LocalPayment</value>
				<value>com.tr.biton.orm.Order</value>
				<value>com.tr.biton.orm.Payment</value>
				<value>com.tr.biton.orm.PaymentChannelPayment</value>
				<value>com.tr.biton.orm.Product</value>
				<value>com.tr.biton.orm.Transaction</value>
				<value>com.tr.biton.orm.TxInput</value>
				<value>com.tr.biton.orm.TxOutput</value>
				<value>com.tr.biton.orm.User</value>
				<value>com.tr.biton.orm.Location</value>	
				<value>com.tr.biton.orm.Address</value>	
				<value>com.tr.biton.orm.OrderMessage</value>	
				<value>com.tr.biton.orm.Parcel</value>		
				<value>com.tr.biton.orm.Shipment</value>	
				<value>com.tr.biton.orm.Category</value>
				<value>com.tr.biton.orm.Subcategory</value>			
				
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			    <prop key="hibernate.format_sql">true</prop> 
			<!--    <prop key="hibernate.hbm2ddl.auto">create</prop> -->
				<!--  <prop key="hibernate.hbm2ddl.import_files">initiallocations.sql</prop> -->
			</props>
		</property>
	</bean>
	
	<bean id="walletDAO" class="com.tr.biton.dao.WalletDAOImpl">
		<property name="sessionFactory"	ref="hibernate4AnnotatedSessionFactory"	/>
	</bean>
	<bean id="walletService" class="com.tr.biton.service.WalletServiceImpl">
		<property name="walletDAO" ref="walletDAO"></property>
	</bean>
	
	<bean id="userDAO" class="com.tr.biton.dao.UserDAOImpl">
		<property name="sessionFactory"	ref="hibernate4AnnotatedSessionFactory"	/>
	</bean>
	<bean id="userService" class="com.tr.biton.service.UserServiceImpl">
		<property name="userDAO" ref="userDAO"></property>
		
	</bean>
	
	
	<bean id="locationDAO" class="com.tr.biton.dao.LocationDAOImpl">
		<property name="sessionFactory"	ref="hibernate4AnnotatedSessionFactory"	/>
		
	</bean>
	
	<bean id="locationService" class="com.tr.biton.service.LocationServiceImpl">
		<property name="locationDAO" ref="locationDAO"></property>
		
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <!-- SMTP settings -->
    <property name="host" value="smtp.gmail.com" />
        <property name="port" value="587" />
        <property name="username" value="dhasan333.dh@gmail.com" />
        <property name="password" value="g5111999" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.host">smtp.gmail.com</prop>
				<prop key="mail.smtp.port">587</prop>
            </props>
        </property>

	</bean>
	
		
	<security:http authentication-manager-ref="jdbc-auth" >
		<security:csrf disabled="true"/>
  		<security:intercept-url pattern="/buyer/*" access="hasAnyRole('ROLE_BUYER','ROLE_ESCROW','ROLE_MASTER')" />
  		<security:intercept-url pattern="/seller/*" access="hasAnyRole('ROLE_SELLER','ROLE_ESCROW','ROLE_MASTER')" />
  		<security:intercept-url pattern="/escrow/*" access="hasAnyRole('ROLE_ESCROW','ROLE_MASTER')" />
  		<security:intercept-url pattern="/master/*" access="hasRole('ROLE_MASTER')" />
  		<security:form-login login-page="/login" default-target-url="/index"
  			
  			username-parameter="username"
  			password-parameter="password"
  			login-processing-url="/processlogin"
  			authentication-failure-url="/fail2login" />
  		<security:logout logout-success-url="/" />
 		
 	</security:http>
 	
	
    <security:authentication-manager id="jdbc-auth">
    	
   		<security:authentication-provider>
         		
    		<security:jdbc-user-service data-source-ref="dataSource"  
      			users-by-username-query="select username, password, active from users where username=?" 
          		authorities-by-username-query="select username, usertype from users where username=?  "/>
   		</security:authentication-provider>
 	</security:authentication-manager>
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:annotation-driven />

</beans>